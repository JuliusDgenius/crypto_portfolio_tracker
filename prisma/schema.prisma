// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Base schemas will be expanded as we implement features
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  portfolios Portfolio[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Portfolio {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  userId      String        @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  holdings    Holding[]
  transactions Transaction[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Holding {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  portfolioId String    @db.ObjectId
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  assetId     String    // Cryptocurrency identifier (e.g., BTC, ETH)
  quantity    Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Transaction {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  portfolioId String    @db.ObjectId
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  type        TransactionType
  assetId     String    // Cryptocurrency identifier
  quantity    Float
  price       Float
  timestamp   DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum TransactionType {
  BUY
  SELL
}
